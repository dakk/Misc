ARCH=x86

CFLAGS		=	-I. -Wall
CXXFLAGS	=	-lang=c++ -fno-rtti


ifeq ($(ARCH),x86)
	ARCH_DIR=arch/x86
	ARCH_SOURCES=$(ARCH_DIR)/boot.o $(ARCH_DIR)/dt.o $(ARCH_DIR)/x32/timer.o \
		$(ARCH_DIR)/io.o $(ARCH_DIR)/x32/calls.o $(ARCH_DIR)/arch.o $(ARCH_DIR)/kvideo.o
	LDFLAGS=-T$(ARCH_DIR)/link.ld -static -melf_i386
	CFLAGS += -m32 -Wno-write-strings -nostdlib -nostartfiles -ffreestanding \
				-fno-stack-protector -nostdlib -nostdinc -fno-builtin -nodefaultlibs -fno-exceptions
	ASFLAGS=-felf
	CONFIG_H="#ifndef CONFIG_H\n#define CONFIG_H\n#define X86\n#define BIT32\n#endif"
endif

ifeq ($(ARCH),x86_64)
	ARCH_DIR=arch/x86
	ARCH_SOURCES=$(ARCH_DIR)/boot.o $(ARCH_DIR)/dt.o $(ARCH_DIR)/x64/timer.o \
		$(ARCH_DIR)/io.o $(ARCH_DIR)/x64/calls.o $(ARCH_DIR)/arch.o $(ARCH_DIR)/kvideo.o
	LDFLAGS=-T$(ARCH_DIR)/link.ld -static
	CFLAGS += -m64 -Wno-write-strings -nostdlib -nostartfiles -ffreestanding \
				-fno-stack-protector -nostdlib -nostdinc -fno-builtin -nodefaultlibs -fno-exceptions
	ASFLAGS=-felf64
	CONFIG_H="\x23ifndef CONFIG_H\n\x23define CONFIG_H\n\x23define X86\n\x23define BIT64\n\x23endif\n"
endif

include servers/Makefile

SOURCES=$(ARCH_SOURCES) core/ipc.o core/elf.o core/mm.o core/main.o core/stdio.o core/sched.o $(SERVERS)

BIN=$(ARCH_DIR)/kernel

CXXFLAGS += $(CFLAGS)
ASM=nasm
CC=gcc
CPP=g++
#LDFLAGS=-static


